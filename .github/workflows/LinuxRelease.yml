name: LinuxRelease
on: [push, pull_request,repository_dispatch]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/master' || github.sha }}
  cancel-in-progress: true

jobs:
 linux-extensions-64:
    name: Linux Extensions (64 Bit)
    runs-on: ubuntu-latest
    container: ubuntu:16.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_KEY }}
      AWS_DEFAULT_REGION: us-east-1

    steps:
    # Todo we now do a lot of this shit twice
    - name: Install stuff
      shell: bash
      run: |
        apt-get update -y -qq
        apt-get install -y -qq software-properties-common
        add-apt-repository ppa:git-core/ppa
        apt-get update -y -qq
        apt-get install -y -qq ninja-build make gcc-multilib g++-multilib libssl-dev wget openjdk-8-jdk zip maven unixodbc-dev libc6-dev-i386 lib32readline6-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip build-essential checkinstall libffi-dev curl libz-dev openssh-client

    - name: Install Git 2.18.5
      shell: bash
      run: |
        wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
        tar xvf v2.18.5.tar.gz
        cd git-2.18.5
        make
        make prefix=/usr install
        git --version

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - uses: ./duckdb/.github/actions/ubuntu_16_setup

    # Build extension
    - name: Build extension
      shell: bash
      run: |
        make release

    - name: Test
      shell: bash
      run: |
        ./duckdb/scripts/extension-upload-test.sh local

    - uses: actions/upload-artifact@v2
      with:
        name: linux-extensions-64
        path: |
          build/release/extension/src/*.duckdb_extension

#    # Deploy binary # todo_replace bogus version when we have confirmed this will not bork production
#    - name: Deploy
#      shell: bash
#      run: |
#        ./scripts/extension-upload.sh bogus_platform bogus_version ${{ secrets.S3_BUCKET }} 0

 manylinux-extensions:
    name: Linux Extensions (64 Bit, GCC4)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64

    steps:
    - name: Install dependencies
      shell: bash
      run: |
        yum install -y gcc gcc-c++ cmake make
        yum install -y epel-release
        yum install -y make gcc perl-core pcre-devel wget zlib-devel python3
        yum install -y https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm
        yum install -y git
        yum install -y curl-devel expat-devel gettext-devel zlib-devel perl-ExtUtils-MakeMaker

    - name: Install AWS CLI
      shell: bash
      run: |
        python3 -m pip install awscli
        aws --version

      # the weird openssl findreplace fix with version numbers is from: https://github.com/h2o/h2o/issues/213
    - name: Download OpenSSL 1.1.1s
      shell: bash
      run: |
        wget https://github.com/openssl/openssl/archive/refs/tags/OpenSSL_1_1_1s.tar.gz
        tar -xzvf OpenSSL_1_1_1s.tar.gz
        mv openssl-OpenSSL_1_1_1s openssl-1.1.1s
        cd openssl-1.1.1s
        find ./ -type f -exec sed -i -e 's/\#\ define\ OPENSSL\_VERSION\_NUMBER/\#define\ OPENSSL\_VERSION\_NUMBER/g' {} \;

    - name: Configure OpenSSL
      shell: bash
      run: |
        cd openssl-1.1.1s
        ./config --prefix=/usr --openssldir=/etc/ssl --libdir=lib no-shared zlib-dynamic

    - name: Build OpenSSL
      shell: bash
      run: |
        cd openssl-1.1.1s
        make
        make install

    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'true'

    - name: Version Check
      shell: bash
      run: |
        cmake --version
        ldd --version ldd
        ls -al
        pwd
        echo "$USER"

    # Build extension
    - name: Build extension
      shell: bash
      run: |
        make release

    - name: Test
      shell: bash
      run: |
        ./duckdb/scripts/extension-upload-test.sh local

    - uses: actions/upload-artifact@v2
      with:
        name: manylinux-extensions-x86_64
        path: |
          build/release/extension/*/*.duckdb_extension

#    # Deploy binary # todo_replace bogus version when we have confirmed this will not bork production
#    - name: Deploy
#      shell: bash
#      run: |
#        ./duckdb/scripts/extension-upload.sh bogus_platform bogus_version ${{ secrets.S3_BUCKET }} 0